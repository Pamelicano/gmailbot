import pickle
import tensorflow as tf

print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å...")
model = tf.keras.models.load_model("email_model.h5")
with open("vectorizer.pkl", "rb") as f:
    vectorizer = pickle.load(f)

print("‚úÖ –ú–æ–¥–µ–ª—å –∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")

def predict_email(text):
    X = vectorizer.transform([text])
    pred = model.predict(X)
    class_idx = pred.argmax(axis=1)[0]
    confidence = pred[0][class_idx]
    if class_idx == 1:
        return f"üìå –í–ê–ñ–ù–û–ï –ø–∏—Å—å–º–æ (–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å {confidence:.2f})"
    else:
        return f"‚úâÔ∏è –ù–ï–≤–∞–∂–Ω–æ–µ –ø–∏—Å—å–º–æ (–¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å {confidence:.2f})"

samples = [
    "–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: 12345",
    "–°–∫–∏–¥–∫–∏ –Ω–∞ –æ–¥–µ–∂–¥—É –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ!",
    "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ–± –æ–ø–ª–∞—Ç–µ –∑–∞–∫–∞–∑–∞ ‚Ññ123",
    "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ 20 –º–∏–Ω—É—Ç –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è"
]

print("\n=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ ===")
for s in samples:
    result = predict_email(s)
    print(f"\n–¢–µ–∫—Å—Ç: {s}\n‚Üí {result}")
